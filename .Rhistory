canditate = rep('carson', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,1,3,6,11,3))
fiorina = data.frame(party = rep('republican',6),
canditate = rep('fiorina', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,3,4,3,4,2))
huckabee = data.frame(party = rep('republican',6),
canditate = rep('huckabee', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,3,9,12,5,4))
christie = data.frame(party = rep('republican',6),
canditate = rep('christie', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(20,19,26,9,15,8))
hillary = data.frame(party = rep('democrat',6),
canditate = rep('hillary', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(39,31,29,22,15,2))
sanders = data.frame(party = rep('democrat',6),
canditate = rep('sanders', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,15,8,6,6,0))
poliFactList <- list(trump, carson, rubio, cruz, fiorina,
jeb, kasich, rand, christie, huckabee,
hillary, sanders)
fix(poliFact)
poliFact <- do.call('rbind', poliFactList)
poliFact
require(tidry) ; require(dplyr)
require(tidyr) ; require(dplyr)
poliFact %>%
group_by(candidate) %>%
mutate(total = sum(frequency))
head(poliFact)
poliFact %>%
group_by(canditate)
poliFact %>%
group_by(canditate) %>%
summarize(total = sum(frequency))
poliFact %>%
group_by(canditate) %>%
mutate(frequency/summarize(sum(frequency)))
poliFact %>%
group_by(canditate) %>%
mutate(weightedScore = score*frequency/sum(frequency))
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency))
5/71
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion)
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion)
summarize(honesty = mean(weightedScore))
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore))
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty))
kasich = data.frame(party = rep('republican',6),
canditate = rep('kasich', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(15,13,9,8,6,3))
jeb = data.frame(party = rep('republican',6),
canditate = rep('jeb', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(14,18,14,16,4,2))
rubio = data.frame(party = rep('republican',6),
canditate = rep('rubio', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(17,27,26,25,18,2))
cruz = data.frame(party = rep('republican',6),
canditate = rep('cruz', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,11,8,18,19,4))
rand = data.frame(party = rep('republican',6),
canditate = rep('rand', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(10,11,10,5,8,2))
trump = data.frame(party = rep('republican',6),
canditate = rep('trump', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,5,13,9,29,15))
carson = data.frame(party = rep('republican',6),
canditate = rep('carson', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,1,3,6,11,3))
fiorina = data.frame(party = rep('republican',6),
canditate = rep('fiorina', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,3,4,3,4,2))
huckabee = data.frame(party = rep('republican',6),
canditate = rep('huckabee', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,3,9,12,5,4))
christie = data.frame(party = rep('republican',6),
canditate = rep('christie', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(20,19,26,9,15,8))
hillary = data.frame(party = rep('democrat',6),
canditate = rep('hillary', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(39,31,29,22,15,2))
sanders = data.frame(party = rep('democrat',6),
canditate = rep('sanders', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,15,8,6,6,0))
obama = data.frame(party = rep('democrat',6),
canditate = rep('obama', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(21,27,27,12,12,2))
poliFactList <- list(trump, carson, rubio, cruz, fiorina,
jeb, kasich, rand, christie, huckabee,
hillary, sanders)
poliFact <- do.call('rbind', poliFactList)
require(tidyr) ; require(dplyr)
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty))
kasich = data.frame(party = rep('republican',6),
canditate = rep('kasich', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(15,13,9,8,6,3))
jeb = data.frame(party = rep('republican',6),
canditate = rep('jeb', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(14,18,14,16,4,2))
rubio = data.frame(party = rep('republican',6),
canditate = rep('rubio', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(17,27,26,25,18,2))
cruz = data.frame(party = rep('republican',6),
canditate = rep('cruz', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,11,8,18,19,4))
rand = data.frame(party = rep('republican',6),
canditate = rep('rand', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(10,11,10,5,8,2))
trump = data.frame(party = rep('republican',6),
canditate = rep('trump', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,5,13,9,29,15))
carson = data.frame(party = rep('republican',6),
canditate = rep('carson', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,1,3,6,11,3))
fiorina = data.frame(party = rep('republican',6),
canditate = rep('fiorina', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,3,4,3,4,2))
huckabee = data.frame(party = rep('republican',6),
canditate = rep('huckabee', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,3,9,12,5,4))
christie = data.frame(party = rep('republican',6),
canditate = rep('christie', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(20,19,26,9,15,8))
hillary = data.frame(party = rep('democrat',6),
canditate = rep('hillary', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(39,31,29,22,15,2))
sanders = data.frame(party = rep('democrat',6),
canditate = rep('sanders', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,15,8,6,6,0))
obama = data.frame(party = rep('democrat',6),
canditate = rep('obama', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(21,27,27,12,12,2))
poliFactList <- list(trump, carson, rubio, cruz, fiorina,
jeb, kasich, rand, christie, huckabee,
hillary, sanders, obama)
poliFact <- do.call('rbind', poliFactList)
require(tidyr) ; require(dplyr)
poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty))
ggplot(poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty)),
aes(candidate, honest) +geom_point()
ggplot(poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty)),
aes(candidate, honest)) +geom_point()
require(ggplot2)
poliFactSummary <- poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty)),
aes(candidate, honest))
ggplot(poliFactSummary, aes(candidate, honest)) +geom_point()
poliFactSummary <- poliFact %>%
group_by(canditate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty))
ggplot(poliFactSummary, aes(candidate, honest)) +geom_point()
poliFactSummary
kasich = data.frame(party = rep('republican',6),
candidate = rep('kasich', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(15,13,9,8,6,3))
jeb = data.frame(party = rep('republican',6),
candidate = rep('jeb', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(14,18,14,16,4,2))
rubio = data.frame(party = rep('republican',6),
candidate = rep('rubio', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(17,27,26,25,18,2))
cruz = data.frame(party = rep('republican',6),
candidate = rep('cruz', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,11,8,18,19,4))
rand = data.frame(party = rep('republican',6),
candidate = rep('rand', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(10,11,10,5,8,2))
trump = data.frame(party = rep('republican',6),
candidate = rep('trump', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,5,13,9,29,15))
carson = data.frame(party = rep('republican',6),
candidate = rep('carson', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,1,3,6,11,3))
fiorina = data.frame(party = rep('republican',6),
candidate = rep('fiorina', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,3,4,3,4,2))
huckabee = data.frame(party = rep('republican',6),
candidate = rep('huckabee', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,3,9,12,5,4))
christie = data.frame(party = rep('republican',6),
candidate = rep('christie', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(20,19,26,9,15,8))
hillary = data.frame(party = rep('democrat',6),
candidate = rep('hillary', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(39,31,29,22,15,2))
sanders = data.frame(party = rep('democrat',6),
candidate = rep('sanders', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,15,8,6,6,0))
obama = data.frame(party = rep('democrat',6),
candidate = rep('obama', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(21,27,27,12,12,2))
poliFactList <- list(trump, carson, rubio, cruz, fiorina,
jeb, kasich, rand, christie, huckabee,
hillary, sanders, obama)
poliFact <- do.call('rbind', poliFactList)
require(tidyr) ; require(dplyr) ; require(ggplot2)
poliFactSummary <- poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore)) %>%
arrange(desc(honesty))
ggplot(poliFactSummary, aes(candidate, honest)) +geom_point()
ggplot(poliFactSummary, aes(candidate, honesty)) +geom_point()
poliFactSummary
poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion)
poliFactSummary <- poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore),
stdErr = sd(weightedScore)/sqrt(sum(frequency))) %>%
arrange(desc(honesty))
politiFactSummary
poliFactSummary
kasich = data.frame(party = rep('republican',6),
candidate = rep('kasich', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(15,13,9,8,6,3))
jeb = data.frame(party = rep('republican',6),
candidate = rep('jeb', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(14,18,14,16,4,2))
rubio = data.frame(party = rep('republican',6),
candidate = rep('rubio', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(17,27,26,25,18,2))
cruz = data.frame(party = rep('republican',6),
candidate = rep('cruz', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,11,8,18,19,4))
rand = data.frame(party = rep('republican',6),
candidate = rep('rand', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(10,11,10,5,8,2))
trump = data.frame(party = rep('republican',6),
candidate = rep('trump', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,5,13,9,29,15))
carson = data.frame(party = rep('republican',6),
candidate = rep('carson', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(0,1,3,6,11,3))
fiorina = data.frame(party = rep('republican',6),
candidate = rep('fiorina', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(2,3,4,3,4,2))
huckabee = data.frame(party = rep('republican',6),
candidate = rep('huckabee', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,3,9,12,5,4))
christie = data.frame(party = rep('republican',6),
candidate = rep('christie', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(20,19,26,9,15,8))
hillary = data.frame(party = rep('democrat',6),
candidate = rep('hillary', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(39,31,29,22,15,2))
sanders = data.frame(party = rep('democrat',6),
candidate = rep('sanders', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(8,15,8,6,6,0))
obama = data.frame(party = rep('democrat',6),
candidate = rep('obama', 6),
score = c(3,2,1,-1,-2,-3),
frequency = c(21,27,27,12,12,2))
poliFactList <- list(trump, carson, rubio, cruz, fiorina,
jeb, kasich, rand, christie, huckabee,
hillary, sanders)
poliFact <- do.call('rbind', poliFactList)
require(tidyr) ; require(dplyr) ; require(ggplot2)
poliFactSummary <- poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore),
stdErr = sd(weightedScore)/sqrt(sum(frequency))) %>%
arrange(desc(honesty))
ggplot(poliFactSummary, aes(candidate, honesty))
+ geom_point()
poliFactSummary
poliFactSummary <- poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore),
stdErr = sd(weightedScore)/sqrt(sum(frequency)),
lower = honesty - stdErr,
upper = honest + stdErr) %>%
arrange(desc(honesty))
poliFactSummary <- poliFact %>%
group_by(candidate) %>%
mutate(proportion = frequency/sum(frequency),
weightedScore = score * proportion) %>%
summarize(honesty = mean(weightedScore),
stdErr = sd(weightedScore)/sqrt(sum(frequency)),
lower = honesty - stdErr,
upper = honesty + stdErr) %>%
arrange(desc(honesty))
poliFactSummary
ggplot(poliFactSummary, aes(candidate, honesty))
+ geom_point()
ggplot(poliFactSummary, aes(candidate, honesty)) +
geom_point()
ggplot(poliFactSummary, aes(reorder(candidate, honesty), honesty)) +
geom_point()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point()+ theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
labels(x = 'Honesty (mean)', y = 'Candidate')
geom_point()+ theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
labels(x = 'Honesty (mean)', y = 'Candidate') +
geom_point()+ theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labels(x = 'Honesty (mean)', y = 'Candidate')
?labels
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labs(x = 'Honesty (mean)', y = 'Candidate') +
theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(0)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  type = 'dashed')
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  linetype = 'dashed')
poliFactSummary
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.1, position=pd)
labs(x = 'Honesty (mean)', y = 'Candidate')
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.1, position=pd) +
labs(x = 'Honesty (mean)', y = 'Candidate')
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.1) +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  linetype = 'dashed')
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.1,
position = reorder(candidate, honesty)) +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  linetype = 'dashed')
theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.1,
position = reorder(candidate, honesty)) +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  linetype = 'dashed') +
theme_bw()
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbarh(aes(ymin=lower, ymax=upper), colour="black", width=0)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbarh(aes(xmin=lower, xmax=upper), colour="black", width=0)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbarh(aes(xmin=lower, xmax=upper), colour="black", width=.1)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbarh(aes(xmin=lower, xmax=upper), colour="black", height=.1)
ggplot(poliFactSummary, aes(honesty, reorder(candidate, honesty))) +
geom_point() +
geom_errorbarh(aes(xmin=lower, xmax=upper), colour="black", height=0) +
labs(x = 'Honesty (mean)', y = 'Candidate') +
geom_vline(xintercept = 0,  linetype = 'dashed') +
theme_bw()
16200-14000+692
8700*2
3400+492
47*2
93*2
670*2
9400*2
800+584
34000*.02
34000*.047
100*exp(.02*10)
100*exp(.05*10)
100*exp(.1*10)
100*exp(1*10)
100*exp(.5*10)
100*exp(.7*10)
4000/26
100*26
4000/26
150*26
120*26
getwd()
list.files()
setwd('Dropbox/isotopes')
setwd('Dropbox/isotope')
setwd('Desktop')
list.files()
setwd('gits')
list.files
list.files()
setwd('isotopes')
getwd()
